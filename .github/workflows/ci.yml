name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  rust:
    name: Rust CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/generator
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v3
        with:
          path: target
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets --all-features -- -D warnings
      - run: cargo build --all-targets
      - run: cargo test --all

  ts:
    name: TypeScript CI (cloesce-ts)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/schema-extractor/ts
    steps:
      - uses: actions/checkout@v4

      # ðŸ”‘ Make sure the lockfile actually exists where we point setup-node
      - name: Verify lockfile
        run: |
          test -f package-lock.json || { echo "package-lock.json missing in src/schema-extractor/ts"; exit 1; }

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          # Path is relative to repo root (not working-directory)
          cache-dependency-path: src/schema-extractor/ts/package-lock.json

      - name: Install deps (creates ~/.npm)
        run: npm ci

      # Safety: ensure the cache dir exists so the post-step never errors
      - name: Ensure npm cache dir exists
        run: mkdir -p ~/.npm

      - name: Prettier (report-only on push)
        if: ${{ github.event_name == 'push' }}
        run: npm run format || true

      - name: Prettier (enforced on PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: npm run format

      - name: TypeScript typecheck
        run: npm run typecheck

      - name: Build
        run: npm run build

      - name: Unit tests
        run: npm test
