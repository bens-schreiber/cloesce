name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  rust:
    name: Rust CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/generator
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build crate
        run: cargo build --all-targets

      - name: Run tests
        run: cargo test --all

  ts:
    name: TypeScript CI (cloesce-ts)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/schema-extractor/cloesce-ts
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: src/schema-extractor/cloesce-ts/package-lock.json

      - name: Install dependencies
        run: npm ci

      # Direct tsc typecheck (no npm script required)
      - name: TypeScript typecheck
        run: |
          npx --yes typescript@^5 tsc -p tsconfig.json --noEmit
          if [ -f tsconfig.test.json ]; then npx --yes typescript@^5 tsc -p tsconfig.test.json --noEmit; fi

      # Build (assumes you have a "build" script; otherwise call tsc directly)
      - name: Build
        run: |
          if npm run | grep -q "^  build$"; then
            npm run build
          else
            npx --yes typescript@^5 tsc -p tsconfig.json
          fi

      - name: Unit tests
        run: npm test
