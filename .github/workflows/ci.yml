name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  ci:
    name: Rust CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/generator
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Rust stable
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      # Cache Cargo registry and build artifacts
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}

      # Check formatting
      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      # Run Clippy
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      # Build all targets
      - name: Build crate
        run: cargo build --all-targets

      # Run tests
      - name: Run tests
        run: cargo test --all
